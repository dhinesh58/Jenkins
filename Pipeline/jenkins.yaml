pipeline {
    agent any

    stages {
        stage('Source code checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/dhinesh58/Jenkins.git']])
            }
        }
      stage('Check the terraform version') {
            steps {
                sh 'terraform -version'
            }
        } 
      stage('Terraform initialization') {
            steps {
                sh 'terraform init'
            }
        } 
      stage('Terraform plan') {
            steps {
             withCredentials([azureServicePrincipal(credentialsId: 'IAC' ,subscriptionIdVariable: 'SUB_ID' ,clientIdVariable: 'CLIENT_ID' ,clientSecretVariable: 'CLIENT_SECRET' ,tenantIdVariable: 'TENANT_ID')])
              {
                 sh "terraform plan -var 'subscription_id=$SUB_ID' -var 'tenant_id=$TENANT_ID' -var 'client_id=$CLIENT_ID' -var 'client_secret=$CLIENT_SECRET'"
              }  
            }
        }
      stage('Terraform apply') {
            steps {
             withCredentials([azureServicePrincipal(credentialsId: 'IAC' ,subscriptionIdVariable: 'SUB_ID' ,clientIdVariable: 'CLIENT_ID' ,clientSecretVariable: 'CLIENT_SECRET' ,tenantIdVariable: 'TENANT_ID')])
              {
                 sh "terraform apply -auto-approve -var 'subscription_id=$SUB_ID' -var 'tenant_id=$TENANT_ID' -var 'client_id=$CLIENT_ID' -var 'client_secret=$CLIENT_SECRET'"
                 sh "terraform destroy -auto-approve -var 'subscription_id=$SUB_ID' -var 'tenant_id=$TENANT_ID' -var 'client_id=$CLIENT_ID' -var 'client_secret=$CLIENT_SECRET'"
              }  
            }
        }          
    }
}
